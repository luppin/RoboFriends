{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","id","name","email","zipcode","CardList","robots","map","user","index","address","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","borderRadius","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCSCQ,EAZF,SAACC,GACV,OACI,sBAAKC,UAAW,uDAAhB,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,mBACpB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,QACV,0CAAaN,EAAMO,kBCcpBC,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACA,cAAC,EAAD,CAEAR,GAAMK,EAAOG,GAAOR,GACpBC,KAAOI,EAAOG,GAAOP,KACrBC,MAAQG,EAAOG,GAAON,MACtBC,QAAWE,EAAOG,GAAOC,QAAQN,SAJ3BK,SCEXE,EAbG,SAAC,GAAkC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACI,qBAAKf,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVgB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEPI,G,KARA,SAACpB,GAChB,OACI,qBAAKqB,MAAQ,CAACC,UAAW,SAAWC,OAAQ,kBAAmBC,OAAQ,QAASC,aAAc,QAA9F,SACKzB,EAAM0B,aCqCAC,E,kDApCX,aAAgB,IAAD,8BACX,gBAaJC,eAAiB,SAACC,GACb,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAb3C,EAAKC,MAAQ,CACTxB,OAAQ,GACRM,YAAa,IAJN,E,gEAQK,IAAD,OACfmB,MAAM,8CACLzC,MAAK,SAAA0C,GAAQ,OAAIA,EAASC,UAC1B3C,MAAK,SAAA4C,GAAK,OAAI,EAAKP,SAAS,CAACrB,OAAQ4B,S,+BAQhC,IAAD,OACCC,EAAiBC,KAAKN,MAAMxB,OAAO+B,QAAO,SAAAC,GAC5C,OAAOA,EAAMpC,KAAKqC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAEpE,OACI,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWe,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUnB,OAAQ6B,a,GA7BhBM,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1B3D,K","file":"static/js/main.9e5af395.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\n\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className ='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5 '>\r\n            <img alt='robot' src={`https://robohash.org/${props.id}?size=200x200`} />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n                <p>Zipcode: {props.zipcode}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user,index) =>{\r\n                    return (\r\n                    <Card \r\n                    key ={index} \r\n                    id = {robots[index].id} \r\n                    name ={robots[index].name} \r\n                    email= {robots[index].email}\r\n                    zipcode = {robots[index].address.zipcode}\r\n                    />)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList; ","import React from 'react';\r\n\r\nconst SearchBox = ( { searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search'\r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\nreturn (\r\n    <div style ={{overflowY: 'scroll' , border: '5px solid black', height: '500px', borderRadius: '10px'}}>\r\n        {props.children}\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList'\r\nimport  SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}));\r\n    }\r\n    \r\n    onSearchChange = (event) => {\r\n         this.setState({ searchfield: event.target.value })\r\n        \r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f2'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                <CardList robots={filteredRobots}/>\r\n                </Scroll>\r\n               \r\n            </div> \r\n        )\r\n    };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\nimport './containers/App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}